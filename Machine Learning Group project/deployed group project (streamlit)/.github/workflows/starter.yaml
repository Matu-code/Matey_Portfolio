name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff pytest pandas
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: cache poetry install
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-1.5.1-0

      - uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: cache deps
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}

      # Install dependencies. `--no-root` means "install all dependencies but not the project
      # itself", which is what you want to avoid caching _your_ code. The `if` statement
      # ensures this only runs on a cache miss.
      - name: install poetry dependances --no-root
        run: poetry install --no-interaction --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'

      # Now install _your_ project. This isn't necessary for many types of projects -- particularly
      # things like Django apps don't need this. But it's a good idea since it fully-exercises the
      # pyproject.toml and makes that if you add things like console-scripts at some point that
      # they'll be installed and working.
      - name: install poetry dependances
        run: poetry install --no-interaction

      - name: Lint with ruff
        run: |
          # stop the build if there are Python syntax errors or undefined names
          #ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
          # default set of ruff rules with GitHub Annotations
          #ruff --format=github --target-version=py37 .
      - name: Test with pytest
        run: |
          poetry run pytest

